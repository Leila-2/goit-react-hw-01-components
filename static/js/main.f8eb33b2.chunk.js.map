{"version":3,"sources":["components/Statistics/Statistics.module.css","components/User/User.module.css","components/Transactions/Transaction.module.css","components/Friends/Friends.module.css","components/User/User.js","components/Statistics/Statistics.js","components/Statistics/StatisticSection.js","components/Friends/FriendListItem.js","components/Friends/FriendList.js","components/Transactions/TransactionHistory.js","components/Transactions/TransactionSection.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","User","name","tag","location","avatar","followers","veiws","likes","className","s","container","description","img","src","alt","list","Statistics","title","percentage","color","style","backgroundColor","StatisticsSection","items","section","header","map","item","label","id","FriendsListItem","isOnline","width","height","display","borderRadius","FriendsList","TransactionHistory","currency","amount","type","TransactionSection","data","App","user","stats","views","statData","friendsData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8eb33b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Statistics_container__18WG2\",\"title\":\"Statistics_title__3PVIg\",\"percentage\":\"Statistics_percentage__3inQt\",\"list\":\"Statistics_list__3oKT7\",\"header\":\"Statistics_header__3Rc9g\",\"section\":\"Statistics_section___gy6i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"User_container__WQZvp\",\"img\":\"User_img__Kliun\",\"list\":\"User_list__1flwG\",\"description\":\"User_description__BmKr-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Transaction_section__2blPf\",\"data\":\"Transaction_data__3XPge\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Friends_list__1oigC\"};","import PropTypes from 'prop-types';\nimport s from '../User/User.module.css';\n\nexport default function User({\n  name,\n  tag,\n  location,\n  avatar,\n  followers,\n  veiws,\n  likes,\n}) {\n  return (\n    <div className={s.container}>\n      <div className={s.description}>\n        <img className={s.img} src={avatar} alt=\"Аватар пользователя\" />\n\n        <p>{name}</p>\n        <p>@{tag}</p>\n        <p>{location}</p>\n      </div>\n\n      <ul className={s.list}>\n        <li>\n          <span>Followers ...........</span>\n          <span>{followers}</span>\n        </li>\n        <li>\n          <span>Views .................</span>\n          <span>{veiws}</span>\n        </li>\n        <li>\n          <span>Likes ..................</span>\n          <span>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nUser.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string,\n  followers: PropTypes.number,\n  veiws: PropTypes.number,\n  likes: PropTypes.number,\n};\n","import s from '../Statistics/Statistics.module.css';\nexport default function Statistics({ title, percentage, color }) {\n  return (\n    <div className={s.container} style={{ backgroundColor: color }}>\n      <span className={s.title}>{title} </span>\n      <span className={s.percentage}>{percentage}</span>\n    </div>\n  );\n}\n","import Statistics from './Statistics';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nexport default function StatisticsSection({ items }) {\n  return (\n    <section className={s.section}>\n      <h2 className={s.header}> Upload stats </h2>\n      <ul className={s.list}>\n        {items.map(item => (\n          <li key={item.id}>\n            <Statistics\n              title={item.label}\n              percentage={item.percentage}\n              color={item.color}\n            />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatisticsSection.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import PropTypes from 'prop-types';\n\nconst FriendsListItem = ({ avatar, name, isOnline }) => {\n  return (\n    <>\n      <span\n        style={{\n          backgroundColor: isOnline ? 'green' : 'red',\n          width: 10,\n          height: 10,\n          display: 'block',\n          borderRadius: 100,\n        }}\n      ></span>\n      <img src={avatar} alt={name} width=\"48\" />\n      <p>{name}</p>\n    </>\n  );\n};\nFriendsListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  avatar: PropTypes.string,\n};\nexport default FriendsListItem;\n","import FriendsListItem from './FriendListItem';\nimport s from './Friends.module.css';\nexport default function FriendsList({ items }) {\n  return (\n    <ul className={s.list}>\n      {items.map(item => (\n        <li key={item.id}>\n          <FriendsListItem\n            avatar={item.avatar}\n            name={item.name}\n            isOnline={item.isOnline}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n}\n","const TransactionHistory = ({ currency, amount, type }) => {\n  return (\n    <>\n      <td>{type}</td>\n      <td>{amount}</td>\n      <td>{currency}</td>\n    </>\n  );\n};\nexport default TransactionHistory;\n","import TransactionHistory from './TransactionHistory';\nimport s from './Transaction.module.css';\n\nexport default function TransactionSection({ items }) {\n  return (\n    <table className={s.section}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(item => (\n          <tr className={s.data} key={item.id}>\n            <TransactionHistory\n              currency={item.currency}\n              amount={item.amount}\n              type={item.type}\n            />\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n","import './App.css';\nimport User from './components/User/User';\nimport user from './data/user.json';\nimport StatSection from './components/Statistics/StatisticSection';\nimport FriendsList from './components/Friends/FriendList';\nimport statData from './data/statistical-data.json';\nimport friendsData from './data/friends.json';\nimport transactions from './data/transactions.json';\nimport TransactionSection from './components/Transactions/TransactionSection';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <User\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        followers={user.stats.followers}\n        veiws={user.stats.views}\n        likes={user.stats.likes}\n      />\n      <StatSection items={statData} />\n      <FriendsList items={friendsData} />\n      <TransactionSection items={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}