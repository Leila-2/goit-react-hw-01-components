{"version":3,"sources":["components/User.js","components/Statistics.js","components/StatisticSection.js","components/FriendListItem.js","components/FriendList.js","App.js","reportWebVitals.js","index.js"],"names":["User","name","tag","location","avatar","followers","veiws","likes","src","alt","Statistics","title","percentage","StatisticsSection","items","map","item","label","id","FriendsListItem","width","FriendsList","App","className","user","stats","views","statData","friendsData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gzCAEe,SAASA,EAAT,GAQX,IAPFC,EAOC,EAPDA,KACAC,EAMC,EANDA,IACAC,EAKC,EALDA,SACAC,EAIC,EAJDA,OACAC,EAGC,EAHDA,UACAC,EAEC,EAFDA,MACAC,EACC,EADDA,MAEA,OACE,gCACE,gCACE,qBAAKC,IAAKJ,EAAQK,IAAI,kHACtB,4BAAIR,IACJ,kCAAKC,KACL,4BAAIC,OAGN,+BACE,+BACE,6CACA,+BAAOE,OAET,+BACE,yCACA,+BAAOC,OAET,+BACE,yCACA,+BAAOC,a,WC/BF,SAASG,EAAT,GAA4C,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,WAC1C,OACE,gCACE,+BAAOD,IACP,+BAAOC,OCDE,SAASC,EAAT,GAAuC,IAAVC,EAAS,EAATA,MAC1C,OACE,oCACE,gDACA,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,6BACE,cAACN,EAAD,CAAYC,MAAOK,EAAKC,MAAOL,WAAYI,EAAKJ,cADzCI,EAAKE,YCPxB,IAYeC,EAZS,SAAC,GAAsB,IAApBf,EAAmB,EAAnBA,OAAQH,EAAW,EAAXA,KACjC,OACE,qCACE,qBAAKO,IAAKJ,EAAQK,IAAKR,EAAMmB,MAAM,OACnC,4BAAInB,QCLK,SAASoB,EAAT,GAAiC,IAAVP,EAAS,EAATA,MACpC,OACE,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,6BACE,cAAC,EAAD,CAAiBZ,OAAQY,EAAKZ,OAAQH,KAAMe,EAAKf,QAD1Ce,EAAKE,S,kBCqBPI,MAlBf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,cAACvB,EAAD,CACEC,KAAMuB,EAAKvB,KACXC,IAAKsB,EAAKtB,IACVC,SAAUqB,EAAKrB,SACfC,OAAQoB,EAAKpB,OACbC,UAAWmB,EAAKC,MAAMpB,UACtBC,MAAOkB,EAAKC,MAAMC,MAClBnB,MAAOiB,EAAKC,MAAMlB,QAEpB,cAAC,EAAD,CAAaO,MAAOa,IACpB,cAACN,EAAD,CAAaP,MAAOc,QCTXC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cfe40073.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nexport default function User({\n  name,\n  tag,\n  location,\n  avatar,\n  followers,\n  veiws,\n  likes,\n}) {\n  return (\n    <div>\n      <div>\n        <img src={avatar} alt=\"Аватар пользователя\" />\n        <p>{name}</p>\n        <p>@{tag}</p>\n        <p>{location}</p>\n      </div>\n\n      <ul>\n        <li>\n          <span>Followers</span>\n          <span>{followers}</span>\n        </li>\n        <li>\n          <span>Views</span>\n          <span>{veiws}</span>\n        </li>\n        <li>\n          <span>Likes</span>\n          <span>{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nUser.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string,\n  followers: PropTypes.number,\n  veiws: PropTypes.number,\n  likes: PropTypes.number,\n};\n","export default function Statistics({ title, percentage }) {\n  return (\n    <div>\n      <span>{title}</span>\n      <span>{percentage}</span>\n    </div>\n  );\n}\n","import Statistics from './Statistics';\nimport PropTypes from 'prop-types';\n\nexport default function StatisticsSection({ items }) {\n  return (\n    <section>\n      <h2> Upload stats </h2>\n      <ul>\n        {items.map(item => (\n          <li key={item.id}>\n            <Statistics title={item.label} percentage={item.percentage} />\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatisticsSection.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import PropTypes from 'prop-types';\n\nconst FriendsListItem = ({ avatar, name }) => {\n  return (\n    <>\n      <img src={avatar} alt={name} width=\"48\" />\n      <p>{name}</p>\n    </>\n  );\n};\nFriendsListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  avatar: PropTypes.string,\n};\nexport default FriendsListItem;\n","import FriendsListItem from './FriendListItem';\nexport default function FriendsList({ items }) {\n  return (\n    <ul>\n      {items.map(item => (\n        <li key={item.id}>\n          <FriendsListItem avatar={item.avatar} name={item.name} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import './App.css';\nimport User from './components/User';\nimport user from './data/user.json';\nimport StatSection from './components/StatisticSection';\nimport FriendsList from './components/FriendList';\nimport statData from './data/statistical-data.json';\nimport friendsData from './data/friends.json';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <User\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        followers={user.stats.followers}\n        veiws={user.stats.views}\n        likes={user.stats.likes}\n      />\n      <StatSection items={statData} />\n      <FriendsList items={friendsData} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}